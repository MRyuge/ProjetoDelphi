unit uServerModule;

interface

uses
  System.SysUtils, System.Classes, Datasnap.DSServer,
  Datasnap.DSAuth, Datasnap.DSProviderDataModuleAdapter,
  FireDAC.Comp.Client, FireDAC.Stan.Def,
  FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.PG, FireDAC.Phys.PGDef,
  FireDAC.UI.Intf, FireDAC.VCLUI.Wait, FireDAC.Stan.Pool, FireDAC.Stan.Intf,
  FireDAC.Comp.UI, FireDAC.Stan.Param, FireDAC.Stan.Option, FireDAC.Stan.Error,
  FireDAC.Phys.Intf, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, Winapi.Windows;

type
  TServerModule = class(TDSServerModule)
    FDConnection: TFDConnection;
    FDTransaction: TFDTransaction;
    FDQuery1: TFDQuery;
    FDGUIxWaitCursor1: TFDGUIxWaitCursor;
    FDPhysPgDriverLink1: TFDPhysPgDriverLink;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure ConnectToDatabase;
  end;



implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}
{$R *.dfm}
{ TDSServerModule1 }

procedure TServerModule.ConnectToDatabase;
begin
  if not FDConnection.Connected then
  begin
    try
      FDConnection.Params.DriverID := 'PG';
      FDConnection.Params.Database := 'Teste';
      FDConnection.Params.UserName := 'postgres';
      FDConnection.Params.Password := 'postgres';
      FDConnection.Params.Add('Server=localhost');
      FDConnection.Params.Add('Port=5432');

      FDConnection.Connected := True;
    except
      on E: Exception do
        raise Exception.Create('Erro ao conectar ao banco de dados: ' +
          E.Message);
    end;
  end;
end;

end.
